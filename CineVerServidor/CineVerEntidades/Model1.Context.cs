//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CineVerEntidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CineVerEntities : DbContext
    {
        public CineVerEntities()
            : base("name=CineVerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actor> Actor { get; set; }
        public virtual DbSet<ActorEnPelicula> ActorEnPelicula { get; set; }
        public virtual DbSet<Asiento> Asiento { get; set; }
        public virtual DbSet<Boleto> Boleto { get; set; }
        public virtual DbSet<CorteCaja> CorteCaja { get; set; }
        public virtual DbSet<CuentaFidelidad> CuentaFidelidad { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Fila> Fila { get; set; }
        public virtual DbSet<Función> Función { get; set; }
        public virtual DbSet<Gasto> Gasto { get; set; }
        public virtual DbSet<Película> Película { get; set; }
        public virtual DbSet<ProductoDulceria> ProductoDulceria { get; set; }
        public virtual DbSet<Promocion> Promocion { get; set; }
        public virtual DbSet<Sala> Sala { get; set; }
        public virtual DbSet<Socio> Socio { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<VentaEnDulceria> VentaEnDulceria { get; set; }
        public virtual DbSet<AsientoFuncion> AsientoFuncion { get; set; }
    
        public virtual int GenerarFolioVenta(ObjectParameter nuevoFolio)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarFolioVenta", nuevoFolio);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarVentaConFolio(Nullable<int> idEmpleado, Nullable<int> idSocio, Nullable<int> idSucursal, Nullable<decimal> total, string metodoPago, Nullable<System.DateTime> fecha, string tipoVenta)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var idSocioParameter = idSocio.HasValue ?
                new ObjectParameter("idSocio", idSocio) :
                new ObjectParameter("idSocio", typeof(int));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var metodoPagoParameter = metodoPago != null ?
                new ObjectParameter("metodoPago", metodoPago) :
                new ObjectParameter("metodoPago", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipoVentaParameter = tipoVenta != null ?
                new ObjectParameter("tipoVenta", tipoVenta) :
                new ObjectParameter("tipoVenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarVentaConFolio", idEmpleadoParameter, idSocioParameter, idSucursalParameter, totalParameter, metodoPagoParameter, fechaParameter, tipoVentaParameter);
        }
    }
}
