//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CineVerCliente.PeliculaServicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeliculaDTOs", Namespace="http://schemas.datacontract.org/2004/07/CineVerServicios.DTO")]
    [System.SerializableAttribute()]
    public partial class PeliculaDTOs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string directorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> duracionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string generoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPeliculaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> idSucursalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] posterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sinopsisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string director {
            get {
                return this.directorField;
            }
            set {
                if ((object.ReferenceEquals(this.directorField, value) != true)) {
                    this.directorField = value;
                    this.RaisePropertyChanged("director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> duracion {
            get {
                return this.duracionField;
            }
            set {
                if ((this.duracionField.Equals(value) != true)) {
                    this.duracionField = value;
                    this.RaisePropertyChanged("duracion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string genero {
            get {
                return this.generoField;
            }
            set {
                if ((object.ReferenceEquals(this.generoField, value) != true)) {
                    this.generoField = value;
                    this.RaisePropertyChanged("genero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPelicula {
            get {
                return this.idPeliculaField;
            }
            set {
                if ((this.idPeliculaField.Equals(value) != true)) {
                    this.idPeliculaField = value;
                    this.RaisePropertyChanged("idPelicula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> idSucursal {
            get {
                return this.idSucursalField;
            }
            set {
                if ((this.idSucursalField.Equals(value) != true)) {
                    this.idSucursalField = value;
                    this.RaisePropertyChanged("idSucursal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] poster {
            get {
                return this.posterField;
            }
            set {
                if ((object.ReferenceEquals(this.posterField, value) != true)) {
                    this.posterField = value;
                    this.RaisePropertyChanged("poster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sinopsis {
            get {
                return this.sinopsisField;
            }
            set {
                if ((object.ReferenceEquals(this.sinopsisField, value) != true)) {
                    this.sinopsisField = value;
                    this.RaisePropertyChanged("sinopsis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListaPeliculasDTO", Namespace="http://schemas.datacontract.org/2004/07/CineVerServicios.DTO")]
    [System.SerializableAttribute()]
    public partial class ListaPeliculasDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CineVerCliente.PeliculaServicio.PeliculaDTOs[] PeliculasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CineVerCliente.PeliculaServicio.ResultDTO ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CineVerCliente.PeliculaServicio.PeliculaDTOs[] Peliculas {
            get {
                return this.PeliculasField;
            }
            set {
                if ((object.ReferenceEquals(this.PeliculasField, value) != true)) {
                    this.PeliculasField = value;
                    this.RaisePropertyChanged("Peliculas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CineVerCliente.PeliculaServicio.ResultDTO Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultDTO", Namespace="http://schemas.datacontract.org/2004/07/CineVerServicios.DTO")]
    [System.SerializableAttribute()]
    public partial class ResultDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EsExitosoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsExitoso {
            get {
                return this.EsExitosoField;
            }
            set {
                if ((this.EsExitosoField.Equals(value) != true)) {
                    this.EsExitosoField = value;
                    this.RaisePropertyChanged("EsExitoso");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PeliculaServicio.IPelículaServicio")]
    public interface IPelículaServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerPeliculaPorID", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerPeliculaPorIDResponse")]
        CineVerCliente.PeliculaServicio.PeliculaDTOs ObtenerPeliculaPorID(int idPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerPeliculaPorID", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerPeliculaPorIDResponse")]
        System.Threading.Tasks.Task<CineVerCliente.PeliculaServicio.PeliculaDTOs> ObtenerPeliculaPorIDAsync(int idPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerListaPeliculas", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerListaPeliculasResponse")]
        CineVerCliente.PeliculaServicio.ListaPeliculasDTO ObtenerListaPeliculas(int idSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerListaPeliculas", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerListaPeliculasResponse")]
        System.Threading.Tasks.Task<CineVerCliente.PeliculaServicio.ListaPeliculasDTO> ObtenerListaPeliculasAsync(int idSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerPeliculasPorNombre", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerPeliculasPorNombreResponse")]
        CineVerCliente.PeliculaServicio.ListaPeliculasDTO ObtenerPeliculasPorNombre(int idSucursal, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerPeliculasPorNombre", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerPeliculasPorNombreResponse")]
        System.Threading.Tasks.Task<CineVerCliente.PeliculaServicio.ListaPeliculasDTO> ObtenerPeliculasPorNombreAsync(int idSucursal, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerIdPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerIdPeliculaResponse")]
        int ObtenerIdPelicula(string nombre, string director);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/ObtenerIdPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/ObtenerIdPeliculaResponse")]
        System.Threading.Tasks.Task<int> ObtenerIdPeliculaAsync(string nombre, string director);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/AgregarPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/AgregarPeliculaResponse")]
        string AgregarPelicula(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/AgregarPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/AgregarPeliculaResponse")]
        System.Threading.Tasks.Task<string> AgregarPeliculaAsync(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/EditarPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/EditarPeliculaResponse")]
        string EditarPelicula(CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaEditada, CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaOriginal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/EditarPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/EditarPeliculaResponse")]
        System.Threading.Tasks.Task<string> EditarPeliculaAsync(CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaEditada, CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaOriginal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/EliminarPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/EliminarPeliculaResponse")]
        string EliminarPelicula(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPelículaServicio/EliminarPelicula", ReplyAction="http://tempuri.org/IPelículaServicio/EliminarPeliculaResponse")]
        System.Threading.Tasks.Task<string> EliminarPeliculaAsync(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPelículaServicioChannel : CineVerCliente.PeliculaServicio.IPelículaServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PelículaServicioClient : System.ServiceModel.ClientBase<CineVerCliente.PeliculaServicio.IPelículaServicio>, CineVerCliente.PeliculaServicio.IPelículaServicio {
        
        public PelículaServicioClient() {
        }
        
        public PelículaServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PelículaServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PelículaServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PelículaServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CineVerCliente.PeliculaServicio.PeliculaDTOs ObtenerPeliculaPorID(int idPelicula) {
            return base.Channel.ObtenerPeliculaPorID(idPelicula);
        }
        
        public System.Threading.Tasks.Task<CineVerCliente.PeliculaServicio.PeliculaDTOs> ObtenerPeliculaPorIDAsync(int idPelicula) {
            return base.Channel.ObtenerPeliculaPorIDAsync(idPelicula);
        }
        
        public CineVerCliente.PeliculaServicio.ListaPeliculasDTO ObtenerListaPeliculas(int idSucursal) {
            return base.Channel.ObtenerListaPeliculas(idSucursal);
        }
        
        public System.Threading.Tasks.Task<CineVerCliente.PeliculaServicio.ListaPeliculasDTO> ObtenerListaPeliculasAsync(int idSucursal) {
            return base.Channel.ObtenerListaPeliculasAsync(idSucursal);
        }
        
        public CineVerCliente.PeliculaServicio.ListaPeliculasDTO ObtenerPeliculasPorNombre(int idSucursal, string nombre) {
            return base.Channel.ObtenerPeliculasPorNombre(idSucursal, nombre);
        }
        
        public System.Threading.Tasks.Task<CineVerCliente.PeliculaServicio.ListaPeliculasDTO> ObtenerPeliculasPorNombreAsync(int idSucursal, string nombre) {
            return base.Channel.ObtenerPeliculasPorNombreAsync(idSucursal, nombre);
        }
        
        public int ObtenerIdPelicula(string nombre, string director) {
            return base.Channel.ObtenerIdPelicula(nombre, director);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerIdPeliculaAsync(string nombre, string director) {
            return base.Channel.ObtenerIdPeliculaAsync(nombre, director);
        }
        
        public string AgregarPelicula(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula) {
            return base.Channel.AgregarPelicula(pelicula);
        }
        
        public System.Threading.Tasks.Task<string> AgregarPeliculaAsync(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula) {
            return base.Channel.AgregarPeliculaAsync(pelicula);
        }
        
        public string EditarPelicula(CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaEditada, CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaOriginal) {
            return base.Channel.EditarPelicula(peliculaEditada, peliculaOriginal);
        }
        
        public System.Threading.Tasks.Task<string> EditarPeliculaAsync(CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaEditada, CineVerCliente.PeliculaServicio.PeliculaDTOs peliculaOriginal) {
            return base.Channel.EditarPeliculaAsync(peliculaEditada, peliculaOriginal);
        }
        
        public string EliminarPelicula(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula) {
            return base.Channel.EliminarPelicula(pelicula);
        }
        
        public System.Threading.Tasks.Task<string> EliminarPeliculaAsync(CineVerCliente.PeliculaServicio.PeliculaDTOs pelicula) {
            return base.Channel.EliminarPeliculaAsync(pelicula);
        }
    }
}
